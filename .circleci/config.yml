# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

defaults: &defaults
  docker:
    # specify the version you desire here
    # use `-browsers` prefix for selenium tests, e.g. `3.7-browsers`
    - image: circleci/python:3.7
      environment:
        APP_SETTING: testing
        TEST_DATABASE_URL: postgresql://postgres@localhost/test
    - image: circleci/postgres:9.6.5-alpine-ram
      environment:
        CC_TEST_REPORTER_ID: ${CC_TEST_REPORTER_ID}
        SECRET_KEY: "********"
        POSTGRES_USER: postgres
        POSTGRES_DB: test
        POSTGRES_PASSWORD:

set_workspace: &set_workspace
  working_directory: ~/repo

restore_the_cache: &restore_the_cache
  restore_cache:
    keys:
    - v1-dependencies-{{ checksum "requirements.txt" }}
    # fallback to using the latest cache if no exact match is found
    - v1-dependencies-

# setup codeclimate
cc_setup: &cc_setup
  run:
    name: Setup code climate test-reporter
    command: |
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      chmod +x ./cc-test-reporter

#install dependencies
install_dependencies: &install_dependencies
  run:
    name: install dependencies
    command: |
      python -m venv venv
      . venv/bin/activate
      pip install -r requirements.txt

#save cache
save_the_cache: &save_the_cache
  save_cache:
    paths:
      - ./venv
    key: v1-dependencies-{{ checksum "requirements.txt" }}

#storing artifacts
store_the_artifacts: &store_the_artifacts
  store_artifacts:
    path: test-reports
    destination: test-reports

version: 2
jobs:
  test-2.7:
    <<: *defaults
    <<: *set_workspace

    steps:
      - checkout
      - *restore_the_cache
      - *install_dependencies
      - *save_the_cache
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            tox -e python2.7
            coverage xml
      - *store_the_artifacts

    test-3.7-flake:
        <<: *defaults
        <<: *set_workspace

        steps:
          - checkout
          - *restore_the_cache
          - *install_dependencies
          - *save_the_cache
          - run:
              name: run tests
              command: |
                . venv/bin/activate
                tox -e python3.7
                tox -e flake8
                coverage xml
          - *store_the_artifacts

  code-climate:
    <<: *defaults
    <<: *set_workspace

    steps:
      - checkout
      - *restore_the_cache
      - *cc_setup
      - run:
          name: consolidate results
          command: |
            ./cc-test-reporter before-build
            . venv/bin/activate
            coverage combine parallel-coverage/ 
            coverage xml
            coverage report
            ./cc-test-reporter format-coverage -o ./.coverage -t coverage.py
            ./cc-test-reporter upload-coverage -i .coverage


workflows:
  version: 2
  build-then-deploy:
    jobs:
      - test-2.7
      - test-3.7-flake
      - code-climate:
          requires:
            - test-2.7
            - test-3.7-flake